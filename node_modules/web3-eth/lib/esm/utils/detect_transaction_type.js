/*
This file is part of web3.js.

web3.js is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

web3.js is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with web3.js.  If not, see <http://www.gnu.org/licenses/>.
*/
import { format, toHex } from 'web3-utils';
import { ETH_DATA_FORMAT } from 'web3-types';
import { isNullish } from 'web3-validator';
export const defaultTransactionTypeParser = transaction => {
    var _a, _b;
    const tx = transaction;
    if (!isNullish(tx.type))
        return format({ eth: 'uint' }, tx.type, ETH_DATA_FORMAT);
    if (!isNullish(tx.maxFeePerGas) ||
        !isNullish(tx.maxPriorityFeePerGas) ||
        tx.hardfork === 'london' ||
        ((_a = tx.common) === null || _a === void 0 ? void 0 : _a.hardfork) === 'london')
        return '0x2';
    if (!isNullish(tx.accessList) || tx.hardfork === 'berlin' || ((_b = tx.common) === null || _b === void 0 ? void 0 : _b.hardfork) === 'berlin')
        return '0x1';
    return undefined;
};
export const detectTransactionType = (transaction, web3Context) => {
    var _a;
    return ((_a = web3Context === null || web3Context === void 0 ? void 0 : web3Context.transactionTypeParser) !== null && _a !== void 0 ? _a : defaultTransactionTypeParser)(transaction);
};
export const detectRawTransactionType = (transaction) => transaction[0] > 0x7f ? '0x0' : toHex(transaction[0]);
//# sourceMappingURL=detect_transaction_type.js.map