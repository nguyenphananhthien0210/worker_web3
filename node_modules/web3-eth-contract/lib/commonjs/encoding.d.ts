import { AbiConstructorFragment, AbiEventFragment, AbiFunctionFragment, LogsInput, BlockNumberOrTag, Filter, HexString, Topic, Numbers, DataFormat } from 'web3-types';
import { ContractOptions, ContractAbiWithSignature, EventLog } from './types';
export declare const encodeEventABI: ({ address }: ContractOptions, event: AbiEventFragment & {
    signature: string;
}, options?: {
    fromBlock?: BlockNumberOrTag;
    toBlock?: BlockNumberOrTag;
    filter?: Filter;
    topics?: (null | Topic | Topic[])[];
}) => {
    filter: Filter;
    fromBlock?: Numbers | undefined;
    toBlock?: Numbers | undefined;
    topics?: (string | string[])[] | undefined;
    address?: string | undefined;
};
export declare const decodeEventABI: (event: AbiEventFragment & {
    signature: string;
}, data: LogsInput, jsonInterface: ContractAbiWithSignature, returnFormat?: DataFormat) => EventLog;
export declare const encodeMethodABI: (abi: AbiFunctionFragment | AbiConstructorFragment, args: unknown[], deployData?: HexString) => string;
export declare const decodeMethodReturn: (abi: AbiFunctionFragment, returnValues?: HexString) => unknown;
